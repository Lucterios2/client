stages:
  - test
  - build
  - publish

unit-test:
  image: node:latest
  stage: test
  script:
    - npm install
    - npm run test:unit
  coverage: '/All files\s+\|\s+\d+\.\d+/'
  artifacts:
    reports:
      junit:
        - test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

lint-test:
  image: node:latest
  stage: test
  script:
    - npm install
    - npm run lint

build:
  image: node:latest
  stage: build
  script:
    - apt-get install python3
    - npm install
    - ./version_build.sh
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist
      - public/conf/build

publish:
  image: node:latest
  stage: publish
  needs: [build]
  before_script:
    - apt-get update -y && apt-get install -yqqf openssh-client git unzip sshpass rsync --fix-missing
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_TOOLKIT" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $GITLAB_URL >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts  
  script:
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - REPO_URL="git@$GITLAB_URL:lucterios2/lucterios.git"
    - REPO_DIR=lucterios
    - rm -fr $REPO_DIR
    - git clone $REPO_URL $REPO_DIR
    - cp public/conf/build $REPO_DIR/client/build_client
    - cd $REPO_DIR
    - git status
    - git remote -vvv
    - git add client/build_client
    - git status
    - git commit -a -m 'GUI change'
    - git status
    - git push --set-upstream origin master
    - git status        